{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  total: 0,\n  products: []\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    resetCart: state => {\n      state = initialState;\n    },\n    addCart: (state, action) => {\n      const {\n        product,\n        selectedVariation,\n        quantity\n      } = action.payload;\n      state.products.push({\n        product,\n        selectedVariation,\n        quantity\n      });\n      state.total += selectedVariation.buy_price * quantity;\n    },\n    changeQuantity: (state, action) => {\n      const product = state.products.find(_ref => {\n        let {\n          product\n        } = _ref;\n        return product.id === action.payload.product_id;\n      });\n      if (product) {\n        state.total -= product.quantity * product.selectedVariation.buy_price;\n        product.quantity = action.payload.quantity;\n        state.total += product.quantity * product.selectedVariation.buy_price;\n      }\n    },\n    changeSelectedVariation: (state, action) => {\n      const product = state.products.find(_ref2 => {\n        let {\n          product\n        } = _ref2;\n        return product.id === action.payload.product_id;\n      });\n      if (product) {\n        state.total -= product.quantity * product.selectedVariation.buy_price;\n        product.selectedVariation = action.payload.selectedVariation;\n        state.total += product.quantity * product.selectedVariation.buy_price;\n      }\n    },\n    removeCart: (state, action) => {\n      const {\n        product_id\n      } = action.payload;\n      state.products = state.products.filter(_ref3 => {\n        let {\n          product,\n          selectedVariation,\n          quantity\n        } = _ref3;\n        if (product.id === product_id) {\n          state.total -= selectedVariation.buy_price * quantity;\n          if (state.total < 0) state.total = 0;\n          return false;\n        } else return true;\n      });\n    }\n  }\n});\nexport const {\n  resetCart,\n  addCart,\n  changeQuantity,\n  changeSelectedVariation,\n  removeCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","total","products","cartSlice","name","reducers","resetCart","state","addCart","action","product","selectedVariation","quantity","payload","push","buy_price","changeQuantity","find","_ref","id","product_id","changeSelectedVariation","_ref2","removeCart","filter","_ref3","actions","reducer"],"sources":["/home/z3r0/Desktop/binastaNode2/client-distributor-shop/src/store/reducers/cartSlice.ts"],"sourcesContent":["import { Product } from \"@/types/Product\";\nimport { ProductVariation } from \"@/types/ProductVariation.type\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport type Cart = {\n    total: number,\n    products: CartProduct[]\n};\n\nexport type CartProduct = {\n    product: Product,\n    selectedVariation: ProductVariation,\n    quantity: number\n};\n\nconst initialState: Cart = {\n    total: 0,\n    products: [] as CartProduct[]\n};\n\nexport const cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        resetCart: (state) => {\n            state = initialState;\n        },\n        addCart: (state, action) =>  {\n            const {product,  selectedVariation, quantity } = action.payload;\n            state.products.push({\n                product,\n                selectedVariation,\n                quantity\n            });\n            state.total += selectedVariation.buy_price * quantity;\n        },\n        changeQuantity: (state, action) => {\n            const product = state.products.find(({ product }) => product.id === action.payload.product_id);\n            if (product) {\n                state.total -= product.quantity * product.selectedVariation.buy_price;\n                product.quantity = action.payload.quantity;\n                state.total += product.quantity * product.selectedVariation.buy_price;\n            }\n        },\n        changeSelectedVariation: (state, action) => {\n            const product = state.products.find(({ product }) => product.id === action.payload.product_id);\n            if (product) {\n                state.total -= product.quantity * product.selectedVariation.buy_price;\n                product.selectedVariation = action.payload.selectedVariation;\n                state.total += product.quantity * product.selectedVariation.buy_price;\n            }\n        },\n        removeCart: (state, action) => {\n            const { product_id } = action.payload;\n            state.products = state.products.filter(({ product, selectedVariation, quantity }) => {\n                if (product.id === product_id) {\n                    state.total -= selectedVariation.buy_price * quantity;\n                    if (state.total < 0) state.total = 0;\n                    return false;\n                } else return true;\n            })\n        },\n    }\n});\n\nexport const { resetCart, addCart, changeQuantity, changeSelectedVariation, removeCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}