{"ast":null,"code":"import _defineProperty from\"/home/z3r0/Desktop/binastaNode2/client-distributor-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";var _combineReducers;import{combineReducers}from'@reduxjs/toolkit';import{configureStore,createAction}from'@reduxjs/toolkit';import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";import productCategoryReducer,{productCategoryApiSlice}from'./reducers/productCategorySlice';import productsReducer,{productApiSlice}from'./reducers/productsSlice';import userReducer,{userApiSlice}from'@/store/reducers/userSlice';import ordersReducer,{orderApiSlice}from'./reducers/ordersSlice';import addressesReducer,{addressApiSlice}from'./reducers/addressSlice';import cartReducer from'./reducers/cartSlice';export var resetStore=createAction(\"resetStore\");var rootReducer=combineReducers((_combineReducers={user:userReducer,orders:ordersReducer,addresses:addressesReducer,productCategories:productCategoryReducer,products:productsReducer,cart:cartReducer},_defineProperty(_combineReducers,userApiSlice.reducerPath,userApiSlice.reducer),_defineProperty(_combineReducers,orderApiSlice.reducerPath,orderApiSlice.reducer),_defineProperty(_combineReducers,addressApiSlice.reducerPath,addressApiSlice.reducer),_defineProperty(_combineReducers,productCategoryApiSlice.reducerPath,productCategoryApiSlice.reducer),_defineProperty(_combineReducers,productApiSlice.reducerPath,productApiSlice.reducer),_combineReducers));var appReducer=function appReducer(state,action){if(action.type===resetStore.type){return rootReducer(undefined,action);}return rootReducer(state,action);};var persistConfig={key:'root',version:1,storage:storage,blacklist:[userApiSlice.reducerPath,orderApiSlice.reducerPath,addressApiSlice.reducerPath,productApiSlice.reducerPath,productCategoryApiSlice.reducerPath]};var persistedReducer=persistReducer(persistConfig,appReducer);var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}}).concat(userApiSlice.middleware,orderApiSlice.middleware,addressApiSlice.middleware,productApiSlice.middleware,productCategoryApiSlice.middleware);}});export var persistor=persistStore(store);export default store;","map":{"version":3,"names":["combineReducers","configureStore","createAction","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","productCategoryReducer","productCategoryApiSlice","productsReducer","productApiSlice","userReducer","userApiSlice","ordersReducer","orderApiSlice","addressesReducer","addressApiSlice","cartReducer","resetStore","rootReducer","_combineReducers","user","orders","addresses","productCategories","products","cart","_defineProperty","reducerPath","reducer","appReducer","state","action","type","undefined","persistConfig","key","version","blacklist","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","persistor"],"sources":["/home/z3r0/Desktop/binastaNode2/client-distributor-shop/src/store/index.ts"],"sourcesContent":["import { combineReducers } from '@reduxjs/toolkit';\n\nimport { configureStore, createAction } from '@reduxjs/toolkit';\nimport { \n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"\n\nimport productCategoryReducer, { productCategoryApiSlice } from './reducers/productCategorySlice';\nimport productsReducer, { productApiSlice } from './reducers/productsSlice';\nimport userReducer, { userApiSlice } from '@/store/reducers/userSlice';\nimport ordersReducer, { orderApiSlice }  from './reducers/ordersSlice';\nimport addressesReducer, { addressApiSlice } from './reducers/addressSlice';\nimport cartReducer from './reducers/cartSlice';\n\nexport const resetStore = createAction(\"resetStore\");\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    orders: ordersReducer,\n    addresses: addressesReducer,\n    productCategories: productCategoryReducer,\n    products: productsReducer,\n    cart: cartReducer,\n    [ userApiSlice.reducerPath ]: userApiSlice.reducer,\n    [ orderApiSlice.reducerPath ]: orderApiSlice.reducer,\n    [ addressApiSlice.reducerPath ]: addressApiSlice.reducer,\n    [ productCategoryApiSlice.reducerPath ]: productCategoryApiSlice.reducer,\n    [ productApiSlice.reducerPath ]: productApiSlice.reducer\n})\n\nconst appReducer: typeof rootReducer = (state, action) => {\n    if (action.type === resetStore.type) {\n        return rootReducer(undefined, action);\n    }\n    return rootReducer(state, action);\n};\n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n    blacklist: [ userApiSlice.reducerPath , orderApiSlice.reducerPath, addressApiSlice.reducerPath, productApiSlice.reducerPath, productCategoryApiSlice.reducerPath ]  \n};\n\nconst persistedReducer = persistReducer(persistConfig, appReducer)\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) => (getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }\n    }).concat(userApiSlice.middleware, orderApiSlice.middleware, addressApiSlice.middleware, productApiSlice.middleware, productCategoryApiSlice.middleware))\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}