{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport { configureStore, createAction } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport productCategoryReducer, { productCategoryApiSlice } from './reducers/productCategorySlice';\nimport productsReducer, { productApiSlice } from './reducers/productsSlice';\nimport userReducer, { userApiSlice } from '@/store/reducers/userSlice';\nimport ordersReducer, { orderApiSlice } from './reducers/ordersSlice';\nimport addressesReducer, { addressApiSlice } from './reducers/addressSlice';\nimport cartReducer from './reducers/cartSlice';\nexport const resetStore = createAction(\"resetStore\");\nconst rootReducer = combineReducers({\n  user: userReducer,\n  orders: ordersReducer,\n  addresses: addressesReducer,\n  productCategories: productCategoryReducer,\n  products: productsReducer,\n  cart: cartReducer,\n  [userApiSlice.reducerPath]: userApiSlice.reducer,\n  [orderApiSlice.reducerPath]: orderApiSlice.reducer,\n  [addressApiSlice.reducerPath]: addressApiSlice.reducer,\n  [productCategoryApiSlice.reducerPath]: productCategoryApiSlice.reducer,\n  [productApiSlice.reducerPath]: productApiSlice.reducer\n});\nconst appReducer = (state, action) => {\n  if (action.type === resetStore.type) {\n    return rootReducer(undefined, action);\n  }\n  return rootReducer(state, action);\n};\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n  blacklist: [userApiSlice.reducerPath, orderApiSlice.reducerPath, addressApiSlice.reducerPath, productApiSlice.reducerPath, productCategoryApiSlice.reducerPath]\n};\nconst persistedReducer = persistReducer(persistConfig, appReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(userApiSlice.middleware, orderApiSlice.middleware, addressApiSlice.middleware, productApiSlice.middleware, productCategoryApiSlice.middleware)\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","createAction","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","productCategoryReducer","productCategoryApiSlice","productsReducer","productApiSlice","userReducer","userApiSlice","ordersReducer","orderApiSlice","addressesReducer","addressApiSlice","cartReducer","resetStore","rootReducer","user","orders","addresses","productCategories","products","cart","reducerPath","reducer","appReducer","state","action","type","undefined","persistConfig","key","version","blacklist","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","persistor"],"sources":["/home/z3r0/Desktop/binastaNode2/client-distributor-shop/src/store/index.ts"],"sourcesContent":["import { combineReducers } from '@reduxjs/toolkit';\n\nimport { configureStore, createAction } from '@reduxjs/toolkit';\nimport { \n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"\n\nimport productCategoryReducer, { productCategoryApiSlice } from './reducers/productCategorySlice';\nimport productsReducer, { productApiSlice } from './reducers/productsSlice';\nimport userReducer, { userApiSlice } from '@/store/reducers/userSlice';\nimport ordersReducer, { orderApiSlice }  from './reducers/ordersSlice';\nimport addressesReducer, { addressApiSlice } from './reducers/addressSlice';\nimport cartReducer from './reducers/cartSlice';\n\nexport const resetStore = createAction(\"resetStore\");\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    orders: ordersReducer,\n    addresses: addressesReducer,\n    productCategories: productCategoryReducer,\n    products: productsReducer,\n    cart: cartReducer,\n    [ userApiSlice.reducerPath ]: userApiSlice.reducer,\n    [ orderApiSlice.reducerPath ]: orderApiSlice.reducer,\n    [ addressApiSlice.reducerPath ]: addressApiSlice.reducer,\n    [ productCategoryApiSlice.reducerPath ]: productCategoryApiSlice.reducer,\n    [ productApiSlice.reducerPath ]: productApiSlice.reducer\n})\n\nconst appReducer: typeof rootReducer = (state, action) => {\n    if (action.type === resetStore.type) {\n        return rootReducer(undefined, action);\n    }\n    return rootReducer(state, action);\n};\n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n    blacklist: [ userApiSlice.reducerPath , orderApiSlice.reducerPath, addressApiSlice.reducerPath, productApiSlice.reducerPath, productCategoryApiSlice.reducerPath ]  \n};\n\nconst persistedReducer = persistReducer(persistConfig, appReducer)\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) => (getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }\n    }).concat(userApiSlice.middleware, orderApiSlice.middleware, addressApiSlice.middleware, productApiSlice.middleware, productCategoryApiSlice.middleware))\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;"],"mappings":"AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAElD,SAASC,cAAc,EAAEC,YAAY,QAAQ,kBAAkB;AAC/D,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACL,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,OAAOC,sBAAsB,IAAIC,uBAAuB,QAAQ,iCAAiC;AACjG,OAAOC,eAAe,IAAIC,eAAe,QAAQ,0BAA0B;AAC3E,OAAOC,WAAW,IAAIC,YAAY,QAAQ,4BAA4B;AACtE,OAAOC,aAAa,IAAIC,aAAa,QAAS,wBAAwB;AACtE,OAAOC,gBAAgB,IAAIC,eAAe,QAAQ,yBAAyB;AAC3E,OAAOC,WAAW,MAAM,sBAAsB;AAE9C,OAAO,MAAMC,UAAU,GAAGrB,YAAY,CAAC,YAAY,CAAC;AAEpD,MAAMsB,WAAW,GAAGxB,eAAe,CAAC;EAChCyB,IAAI,EAAET,WAAW;EACjBU,MAAM,EAAER,aAAa;EACrBS,SAAS,EAAEP,gBAAgB;EAC3BQ,iBAAiB,EAAEhB,sBAAsB;EACzCiB,QAAQ,EAAEf,eAAe;EACzBgB,IAAI,EAAER,WAAW;EACjB,CAAEL,YAAY,CAACc,WAAW,GAAId,YAAY,CAACe,OAAO;EAClD,CAAEb,aAAa,CAACY,WAAW,GAAIZ,aAAa,CAACa,OAAO;EACpD,CAAEX,eAAe,CAACU,WAAW,GAAIV,eAAe,CAACW,OAAO;EACxD,CAAEnB,uBAAuB,CAACkB,WAAW,GAAIlB,uBAAuB,CAACmB,OAAO;EACxE,CAAEjB,eAAe,CAACgB,WAAW,GAAIhB,eAAe,CAACiB;AACrD,CAAC,CAAC;AAEF,MAAMC,UAA8B,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtD,IAAIA,MAAM,CAACC,IAAI,KAAKb,UAAU,CAACa,IAAI,EAAE;IACjC,OAAOZ,WAAW,CAACa,SAAS,EAAEF,MAAM,CAAC;EACzC;EACA,OAAOX,WAAW,CAACU,KAAK,EAAEC,MAAM,CAAC;AACrC,CAAC;AAED,MAAMG,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACV7B,OAAO;EACP8B,SAAS,EAAE,CAAExB,YAAY,CAACc,WAAW,EAAGZ,aAAa,CAACY,WAAW,EAAEV,eAAe,CAACU,WAAW,EAAEhB,eAAe,CAACgB,WAAW,EAAElB,uBAAuB,CAACkB,WAAW;AACpK,CAAC;AAED,MAAMW,gBAAgB,GAAGtC,cAAc,CAACkC,aAAa,EAAEL,UAAU,CAAC;AAElE,MAAMU,KAAK,GAAG1C,cAAc,CAAC;EACzB+B,OAAO,EAAEU,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IAAMA,oBAAoB,CAAC;IACxDC,iBAAiB,EAAE;MACfC,cAAc,EAAE,CAAC1C,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACtE;EACJ,CAAC,CAAC,CAACsC,MAAM,CAAC/B,YAAY,CAAC2B,UAAU,EAAEzB,aAAa,CAACyB,UAAU,EAAEvB,eAAe,CAACuB,UAAU,EAAE7B,eAAe,CAAC6B,UAAU,EAAE/B,uBAAuB,CAAC+B,UAAU;AAC3J,CAAC,CAAC;AAEF,OAAO,MAAMK,SAAS,GAAG9C,YAAY,CAACwC,KAAK,CAAC;AAK5C,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}