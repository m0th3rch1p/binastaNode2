{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst initialUser = {\n  authenticated: false\n};\nexport const userApiSlice = createApi({\n  reducerPath: \"userApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: `/auth`\n  }),\n  tagTypes: ['user'],\n  endpoints: builder => ({\n    registerUser: builder.mutation({\n      query: user => ({\n        url: \"/register\",\n        method: \"POST\",\n        body: user\n      }),\n      transformResponse: response => response\n    }),\n    authenticateUser: builder.mutation({\n      query: user => ({\n        url: \"/login\",\n        method: \"POST\",\n        body: user\n      })\n    })\n  })\n});\nexport const {\n  useRegisterUserMutation,\n  useAuthenticateUserMutation\n} = userApiSlice;\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: initialUser,\n  reducers: {\n    resetUserSlice: state => {\n      state = initialUser;\n    },\n    setAuthenticated: (state, action) => {\n      state.authenticated = action.payload;\n    }\n  }\n});\nexport const resetUsersApiSlice = () => userApiSlice.util.resetApiState();\nexport const {\n  resetUserSlice,\n  setAuthenticated\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createApi","fetchBaseQuery","initialUser","authenticated","userApiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","registerUser","mutation","query","user","url","method","body","transformResponse","response","authenticateUser","useRegisterUserMutation","useAuthenticateUserMutation","userSlice","name","initialState","reducers","resetUserSlice","state","setAuthenticated","action","payload","resetUsersApiSlice","util","resetApiState","actions","reducer"],"sources":["/home/z3r0/Desktop/binastaNode2/client-distributor-shop/src/store/reducers/userSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport type User = {\n    id?: number | null,\n    email?: string,\n    password?: string,\n    authenticated?: boolean\n}\n\nconst initialUser: User = {\n    authenticated: false\n};\n\nexport const userApiSlice = createApi({\n    reducerPath: \"userApi\",\n    baseQuery: fetchBaseQuery({\n        baseUrl: `/auth`,\n    }),\n    tagTypes: ['user'],\n    endpoints: (builder) => ({\n        registerUser: builder.mutation<{ status: boolean }, User>({\n            query: (user) => ({\n                url: \"/register\",\n                method: \"POST\",\n                body: user\n            }),\n            transformResponse: (response: { status: boolean }) => response as { status: boolean }  \n        }),\n        authenticateUser: builder.mutation<{user: User}, User>({\n          query: (user) => ({\n            url: \"/login\",\n            method: \"POST\",\n            body: user\n          }),\n        })\n    })\n});\n\nexport const {  useRegisterUserMutation, useAuthenticateUserMutation  } = userApiSlice;\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: initialUser,\n    reducers: {\n        resetUserSlice: (state) => {\n            state = initialUser\n        },\n        setAuthenticated: (state, action) => {\n            state.authenticated = action.payload\n        }\n    }\n});\n\nexport const resetUsersApiSlice = () => userApiSlice.util.resetApiState();\n\nexport const { resetUserSlice, setAuthenticated } = userSlice.actions;\n\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AASxE,MAAMC,WAAiB,GAAG;EACtBC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGJ,SAAS,CAAC;EAClCK,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEL,cAAc,CAAC;IACtBM,OAAO,EAAG;EACd,CAAC,CAAC;EACFC,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBC,SAAS,EAAGC,OAAO,KAAM;IACrBC,YAAY,EAAED,OAAO,CAACE,QAAQ,CAA4B;MACtDC,KAAK,EAAGC,IAAI,KAAM;QACdC,GAAG,EAAE,WAAW;QAChBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,iBAAiB,EAAGC,QAA6B,IAAKA;IAC1D,CAAC,CAAC;IACFC,gBAAgB,EAAEV,OAAO,CAACE,QAAQ,CAAqB;MACrDC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAAGO,uBAAuB;EAAEC;AAA6B,CAAC,GAAGlB,YAAY;AAEtF,OAAO,MAAMmB,SAAS,GAAGxB,WAAW,CAAC;EACjCyB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEvB,WAAW;EACzBwB,QAAQ,EAAE;IACNC,cAAc,EAAGC,KAAK,IAAK;MACvBA,KAAK,GAAG1B,WAAW;IACvB,CAAC;IACD2B,gBAAgB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACzB,aAAa,GAAG2B,MAAM,CAACC,OAAO;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM5B,YAAY,CAAC6B,IAAI,CAACC,aAAa,CAAC,CAAC;AAEzE,OAAO,MAAM;EAAEP,cAAc;EAAEE;AAAiB,CAAC,GAAGN,SAAS,CAACY,OAAO;AAErE,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}